stages:
  - build
  - test
  - sonarqube
  - push
  - deploy

variables:
  SONARQUBE_URL: "http://sonarqube:9000"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  GIT_DEPTH: 0
  IMAGE_TAG: $CI_COMMIT_TAG
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""  # Required for docker:dind

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - chmod +x gradlew

cache:
  key: "$CI_PROJECT_ID"
  paths:
    - .gradle/

# Build stage
build:
  stage: build
  script:
    - ./gradlew clean build

# Test stage
test:
  stage: test
  script:
    - ./gradlew test

# SonarQube analysis stage
sonarqube:
  stage: sonarqube
  script:
    - ./gradlew sonarqube -Dsonar.login=$SONAR_TOKEN -Dsonar.host.url=$SONARQUBE_URL
  only:
    - tags
  allow_failure: true

# Push Docker images (only on tags)
docker_push:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
  script:
    - docker build -t $DOCKER_USER/oauth-service:$IMAGE_TAG ./OauthService
    - docker build -t $DOCKER_USER/song-service:$IMAGE_TAG ./SongService
    - docker build -t $DOCKER_USER/streaming-service:$IMAGE_TAG ./StreamingService
    - docker build -t $DOCKER_USER/favorites-service:$IMAGE_TAG ./FavoritesService
    - docker push $DOCKER_USER/oauth-service:$IMAGE_TAG
    - docker push $DOCKER_USER/song-service:$IMAGE_TAG
    - docker push $DOCKER_USER/streaming-service:$IMAGE_TAG
    - docker push $DOCKER_USER/favorites-service:$IMAGE_TAG
  only:
    - tags

# Deploy to Kubernetes (only on tags)
deploy:
  stage: deploy
  image: google/cloud-sdk
  script:
    - kubectl apply -f kubernetes/
  only:
    - tags
